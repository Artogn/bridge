{
  "swagger": "2.0",
  "info": {
    "title": "MetaDisk API"
  },
  "host": "api.metadisk.org",
  "basePath": "/",
  "schemes": ["https"],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "basic": {
      "type": "basic",
      "description": "HTTP Basic Authentication with email:sha256password",
      "name": "Authorization",
      "in": "header"
    },
    "ecdsa": {
      "type": "apiKey",
      "description": "ECDSA pubkey header and x-signature of the request body including nonce",
      "name": "x-pubkey",
      "in": "header"
    }
  },
  "tags": ["users", "keys", "buckets"],
  "paths": {
    "/users": {
      "post": {
        "tags": ["users"],
        "summary": "Registers a new user account with MetaDisk",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "description": "Email address for account activation and login",
                  "required": true,
                  "type": "string"
                },
                "password": {
                  "description": "SHA-256 hash of your plaintext password",
                  "required": true,
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully registered and activation email sent",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "gordon@storj.io"
                },
                "created": {
                  "type": "date-time",
                  "example": "2016-03-04T17:01:02.629Z"
                },
                "activated": {
                  "type": "boolean",
                  "example": false
                }
              }
            }
          }
        }
      }
    },
    "/activations/{token}": {
      "get": {
        "tags": ["users"],
        "summary": "Activates a registered user and optionally redirects",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "type": "string",
            "description": "Activation token sent to user's email address",
            "required": true
          },
          {
            "name": "redirect",
            "in": "query",
            "type": "string",
            "description": "Optional redirect URL for successful activation"
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully activated",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "gordon@storj.io"
                },
                "created": {
                  "type": "date-time",
                  "example": "2016-03-04T17:01:02.629Z"
                },
                "activated": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      }
    },
    "/keys": {
      "get": {
        "tags": ["keys"],
        "security": [
          { "basic": [] },
          { "ecdsa": [] }
        ],
        "summary": "Lists the public ECDSA keys associated with the user",
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "example": "031a259ee122414f57a63bbd6887ee17960e9106b0adcf89a298cdad2108adf4d9"
                  },
                  "user": {
                    "type": "string",
                    "example": "gordon@storj.io"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["keys"],
        "security": [
          { "basic": [] },
          { "ecdsa": [] }
        ],
        "summary": "Registers a ECDSA public key for the user account",
        "parameters": [
          {
            "name": "key",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "key": {
                  "description": "Hexidecimal encoded ECDSA public key",
                  "required": true,
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "example": "031a259ee122414f57a63bbd6887ee17960e9106b0adcf89a298cdad2108adf4d9"
                },
                "user": {
                  "type": "string",
                  "example": "gordon@storj.io"
                }
              }
            }
          }
        }
      }
    },
    "/keys/{pubkey}": {
      "delete": {
        "tags": ["keys"],
        "security": [
          { "basic": [] },
          { "ecdsa": [] }
        ],
        "summary": "Destroys a ECDSA public key for the user account",
        "parameters": [
          {
            "name": "pubkey",
            "in": "path",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "/buckets": {
      "get": {
        "tags": ["buckets"],
        "security": [
          { "basic": [] },
          { "ecdsa": [] }
        ],
        "summary": "Lists all of the buckets belonging to the user",
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "storage": {
                    "type": "number",
                    "description": "Amount of storage space in GB",
                    "example": 10
                  },
                  "transfer": {
                    "type": "number",
                    "description": "Amount of transfer in GB",
                    "example": 30
                  },
                  "status": {
                    "type": "string",
                    "description": "State of the bucket",
                    "example": "Active"
                  },
                  "pubkeys": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Public ECDSA keys associated with the bucket",
                      "example": "031a259ee122414f57a63bbd6887ee17960e9106b0adcf89a298cdad2108adf4d9"
                    }
                  },
                  "user": {
                    "type": "string",
                    "description": "User account to which the bucket belongs",
                    "example": "gordon@storj.io"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the bucket",
                    "default": "New Bucket"
                  },
                  "created": {
                    "type": "date-time",
                    "description": "The date and time the bucket was created",
                    "example": "2016-03-04T17:01:02.629Z"
                  },
                  "id": {
                    "type": "string",
                    "description": "Unique ID for the bucket",
                    "example": "507f1f77bcf86cd799439011"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["buckets"],
        "security": [
          { "basic": [] },
          { "ecdsa": [] }
        ],
        "summary": "Creates a new bucket with the given parameters",
        "parameters": [
          {
            "name": "bucket",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "storage": {
                  "type": "number",
                  "description": "Amount of storage space in GB",
                  "example": 10
                },
                "transfer": {
                  "type": "number",
                  "description": "Amount of transfer in GB",
                  "example": 30
                },
                "pubkeys": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Public ECDSA keys associated with the bucket",
                    "example": "031a259ee122414f57a63bbd6887ee17960e9106b0adcf89a298cdad2108adf4d9"
                  }
                },
                "name": {
                  "type": "string",
                  "description": "Name of the bucket",
                  "default": "New Bucket"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "storage": {
                  "type": "number",
                  "description": "Amount of storage space in GB",
                  "example": 10
                },
                "transfer": {
                  "type": "number",
                  "description": "Amount of transfer in GB",
                  "example": 30
                },
                "status": {
                  "type": "string",
                  "description": "State of the bucket",
                  "example": "Active"
                },
                "pubkeys": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Public ECDSA keys associated with the bucket",
                    "example": "031a259ee122414f57a63bbd6887ee17960e9106b0adcf89a298cdad2108adf4d9"
                  }
                },
                "user": {
                  "type": "string",
                  "description": "User account to which the bucket belongs",
                  "example": "gordon@storj.io"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the bucket",
                  "default": "New Bucket"
                },
                "created": {
                  "type": "date-time",
                  "description": "The date and time the bucket was created",
                  "example": "2016-03-04T17:01:02.629Z"
                },
                "id": {
                  "type": "string",
                  "description": "Unique ID for the bucket",
                  "example": "507f1f77bcf86cd799439011"
                }
              }
            }
          }
        }
      }
    },
    "/buckets/{id}": {
      "get": {
        "tags": ["buckets"],
        "security": [
          { "basic": [] },
          { "ecdsa": [] }
        ],
        "summary": "Returns the bucket object by the given ID",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "description": "Unique ID of the bucket to retrieve",
            "example": "507f1f77bcf86cd799439011",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "storage": {
                  "type": "number",
                  "description": "Amount of storage space in GB",
                  "example": 30
                },
                "transfer": {
                  "type": "number",
                  "description": "Amount of transfer in GB",
                  "example": 50
                },
                "status": {
                  "type": "string",
                  "description": "State of the bucket",
                  "example": "Active"
                },
                "pubkeys": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Public ECDSA keys associated with the bucket",
                    "example": "031a259ee122414f57a63bbd6887ee17960e9106b0adcf89a298cdad2108adf4d9"
                  }
                },
                "user": {
                  "type": "string",
                  "description": "User account to which the bucket belongs",
                  "example": "gordon@storj.io"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the bucket",
                  "default": "New Bucket"
                },
                "created": {
                  "type": "date-time",
                  "description": "The date and time the bucket was created",
                  "example": "2016-03-04T17:01:02.629Z"
                },
                "id": {
                  "type": "string",
                  "description": "Unique ID for the bucket",
                  "example": "507f1f77bcf86cd799439011"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["buckets"],
        "security": [
          { "basic": [] },
          { "ecdsa": [] }
        ],
        "summary": "Updates the bucket with the given properties",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "description": "Unique ID of the bucket to update",
            "example": "507f1f77bcf86cd799439011",
            "required": true
          },
          {
            "name": "bucket",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "storage": {
                  "type": "number",
                  "description": "Amount of storage space in GB",
                  "example": 10
                },
                "transfer": {
                  "type": "number",
                  "description": "Amount of transfer in GB",
                  "example": 30
                },
                "pubkeys": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Public ECDSA keys associated with the bucket",
                    "example": "031a259ee122414f57a63bbd6887ee17960e9106b0adcf89a298cdad2108adf4d9"
                  }
                },
                "name": {
                  "type": "string",
                  "description": "Name of the bucket",
                  "default": "New Bucket"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "storage": {
                  "type": "number",
                  "description": "Amount of storage space in GB",
                  "example": 30
                },
                "transfer": {
                  "type": "number",
                  "description": "Amount of transfer in GB",
                  "example": 50
                },
                "status": {
                  "type": "string",
                  "description": "State of the bucket",
                  "example": "Active"
                },
                "pubkeys": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Public ECDSA keys associated with the bucket",
                    "example": "031a259ee122414f57a63bbd6887ee17960e9106b0adcf89a298cdad2108adf4d9"
                  }
                },
                "user": {
                  "type": "string",
                  "description": "User account to which the bucket belongs",
                  "example": "gordon@storj.io"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the bucket",
                  "default": "New Bucket"
                },
                "created": {
                  "type": "date-time",
                  "description": "The date and time the bucket was created",
                  "example": "2016-03-04T17:01:02.629Z"
                },
                "id": {
                  "type": "string",
                  "description": "Unique ID for the bucket",
                  "example": "507f1f77bcf86cd799439011"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["buckets"],
        "security": [
          { "basic": [] },
          { "ecdsa": [] }
        ],
        "summary": "Destroys the bucket with the given ID",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "Unique ID of the bucket to destroy",
            "example": "507f1f77bcf86cd799439011"
          }
        ]
      }
    },
    "/buckets/{id}/tokens": {
      "post": {
        "tags": ["buckets"],
        "security": [
          { "basic": [] },
          { "ecdsa": [] }
        ],
        "summary": "Destroys the bucket with the given ID",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "description": "Unique ID of the bucket for the desired token",
            "required": true
          },
          {
            "name": "operation",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "operation": {
                  "type": "string",
                  "description": "PUSH or PULL operation"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "description": "The unique one-time-use token"
                },
                "bucket": {
                  "type": "string",
                  "description": "The bucket ID the token is for"
                },
                "expires": {
                  "type": "date-time",
                  "description": "The time the token will expire"
                },
                "operation": {
                  "type": "string",
                  "description": "The operation the token is for"
                }
              }
            }
          }
        }
      }
    },
    "/buckets/{id}/files": {
      "put": {
        "consumes": ["multipart/form-data"],
        "tags": ["buckets"],
        "security": [
          { "basic": [] },
          { "ecdsa": [] }
        ],
        "summary": "Store a file in the Storj network through MetaDisk",
        "parameters": [
          {
            "type": "string",
            "in": "path",
            "name": "id",
            "description": "The unique bucket ID for the request",
            "example": "507f1f77bcf86cd799439011",
            "required": true
          },
          {
            "type": "file",
            "in": "body",
            "name": "file",
            "description": "The file to upload to the network",
            "required": true
          },
          {
            "type": "string",
            "in": "header",
            "name": "x-token",
            "description": "A valid PUSH token for this bucket",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "hash": {
                  "type": "string",
                  "example": "9c1185a5c5e9fc54612808977ee8f548b2258d31"
                },
                "bucket": {
                  "type": "string",
                  "example": "507f1f77bcf86cd799439011"
                },
                "mimetype": {
                  "type": "string",
                  "example": "video/mpeg"
                },
                "filename": {
                  "type": "string",
                  "example": "big_buck_bunny.mp4"
                },
                "size": {
                  "type": "number",
                  "example": 5071076
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["buckets"],
        "security": [
          { "basic": [] },
          { "ecdsa": [] }
        ],
        "summary": "List the all the file metadata stored in the bucket",
        "parameters": [
          {
            "type": "string",
            "in": "path",
            "name": "id",
            "description": "The unique bucket ID for the request",
            "example": "507f1f77bcf86cd799439011",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "hash": {
                    "type": "string",
                    "example": "9c1185a5c5e9fc54612808977ee8f548b2258d31"
                  },
                  "bucket": {
                    "type": "string",
                    "example": "507f1f77bcf86cd799439011"
                  },
                  "mimetype": {
                    "type": "string",
                    "example": "video/mpeg"
                  },
                  "filename": {
                    "type": "string",
                    "example": "big_buck_bunny.mp4"
                  },
                  "size": {
                    "type": "number",
                    "example": 5071076
                  }
                }
              }
            }
          }
        }
      }
    },
    "/buckets/{id}/files/{hash}": {
      "get": {
        "tags": ["buckets"],
        "security": [
          { "basic": [] },
          { "ecdsa": [] }
        ],
        "summary": "Retrieve a series of file pointers for retrieval of file from the Storj network",
        "parameters": [
          {
            "type": "string",
            "in": "path",
            "name": "id",
            "description": "The unique bucket ID for the request",
            "example": "507f1f77bcf86cd799439011",
            "required": true
          },
          {
            "type": "string",
            "in": "path",
            "name": "hash",
            "description": "The file hash to get pointers for",
            "example": "9c1185a5c5e9fc54612808977ee8f548b2258d31",
            "required": true
          },
          {
            "type": "string",
            "in": "header",
            "name": "x-token",
            "description": "A valid PULL token for this bucket",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "destination": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string",
                          "example": "162.243.48.250"
                        },
                        "port": {
                          "type": "number",
                          "example": 4000
                        },
                        "nodeID": {
                          "type": "string",
                          "example": "ff4a7c814c37f81cdc13c5254a2ca43b747d0395"
                        }
                      }
                    },
                    "description": "The contact information for the farmer this payload should be sent to"
                  },
                  "payload": {
                    "type": "string",
                    "description": "The JSON payload that should be sent to the destination to retrieve the shard",
                    "example": "{..signed payload...}"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
