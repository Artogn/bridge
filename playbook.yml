---
- hosts: all
  vars:
    # TODO: lookup synced_dir from Vagrantfile
    synced_dir: /vagrant
    npm:
      # TODO: lookup bin name(s) from package.json
      bin: storj-bridge
    nvm:
      install_script: '{{ synced_dir }}/ansible/files/nvm-v0.30.1-install.sh'
      node:
        version: "{{ lookup('file', './.nvmrc') }}"
  tasks:
    - name: Tweak .bash_profile to auto cd to synced_dir
      lineinfile:
        dest: ~/.profile
        line: 'cd {{ synced_dir }}'
        create: yes

    - name: Install service-level dependencies
      become: true
      apt:
        name: '{{ item }}'
        state: present
      with_items:
        - mongodb
        - git

    - name: Set execute mode on nvm install script
      file:
        path: '{{ nvm.install_script }}'
        mode: 0755
      tags:
        - nvm

    - name: Install nvm
      command: bash -lc '{{ nvm.install_script }}'
      register: nvm_install_result
      changed_when: nvm_install_result.stdout | search("nvm is already installed") == false
      tags:
        - nvm

    - name: Source nvm in ~/.profile
      lineinfile:
        dest: ~/.profile
        line: 'source ~/.nvm/nvm.sh'
        create: yes
      tags:
        - nvm

    - name: Install correct node version
      command: bash -lc 'nvm install v{{ nvm.node.version }}'
      register: nvm_install_node_result
      changed_when: nvm_install_node_result.stderr | search("is already installed") == false
      tags:
        - nvm

    - name: Check default version
      command: bash -lc 'nvm list'
      register: nvm_list_result
      changed_when: false
      tags:
        - nvm

    - name: Set default node version
      command: bash -lc 'nvm alias default v{{ nvm.node.version }}'
      when: nvm_list_result.stdout | search('default -> v{{ nvm.node.version }}') == false
      tags:
        - nvm

    - name: 'Install bridge project dependencies (npm install) - NOTE: THIS COULD TAKE A WHILE...'
      npm:
        path: '{{ synced_dir }}'
      tags:
        - npm
        - install

    - name: "Check for linked project binaries - NOTE: THIS STEP WILL LIKELY FAIL: THAT'S OK!"
      command: bash -lc 'which -a {{ npm.bin }}'
      register: which_bin_result
      changed_when: false
      ignore_errors: yes
      tags:
        - npm
        - link

    - name: Link project binaries (npm link)
      command: bash -lc 'npm link'
      when: which_bin_result.stdout | search('bin/{{ npm.bin }}') == false
      args:
        chdir: '{{ synced_dir }}'
      tags:
        - npm
        - link